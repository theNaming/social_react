{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","console","log","onDoubleClick","onChange","autoFocus","onBlur","React","Component","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","MyPosts","memo","postsElement","posts","reverse","map","p","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","newPostText","onClick","addPost","MyPostsContainer","connect","profilePage","dispatch","action","updateNewPostTextActionCreator","addPostActionCreator","Profile","ProfileContainer","userId","match","params","getUserProfile","getStatus","compose","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.01585760.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3434P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2C5C8\",\"posts\":\"MyPosts_posts__PRzWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2W8h2\"};","import React from 'react';\r\n// import s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status   \r\n    } \r\n    \r\n    activateEditMode = () => {         \r\n        this.setState( {\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                        value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>     \r\n            <div className={s.descriptionBlock}>\r\n                <img src={ props.profile.photos.large } alt='' />\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n   \r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR62givkqM3jJOrOdWzqSJ3hWOeExSwxVEEBg&usqp=CAU' /\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <span>LiKe</span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {   \r\n    let postsElement = \r\n        [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n \r\n    let addPost = () => {       \r\n        props.addPost(); \r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;  \r\n        props.updateNewPostText(text) \r\n    };\r\n  \r\n    return (\r\n        <div className={s.postsBlock}> \r\n            <h3>My Post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement}\r\n                                value={props.newPostText} />\r\n                </div>\r\n                <button onClick={addPost}>Add post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());           \r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n  \r\nconst Profile = (props) => {    \r\n    return ( \r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} /> \r\n            <MyPostsContainer />                   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus  } from '../../redux/profile_reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n \r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {               \r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId); \r\n        this.props.getStatus(userId); \r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} \r\n                        updateStatus={this.props.updateStatus} />           \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile, \r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}